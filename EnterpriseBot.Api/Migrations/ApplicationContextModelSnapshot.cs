// <auto-generated />
using System;
using EnterpriseBot.Api.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EnterpriseBot.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.CandidateForJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("HiringCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PotentialEmployeeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HiringCompanyId");

                    b.HasIndex("JobId");

                    b.HasIndex("PotentialEmployeeId");

                    b.ToTable("CandidatesForJob");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("CompanyUnits")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("GeneralManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GeneralManagerId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BreakerBackgroundJobId")
                        .HasColumnType("text");

                    b.Property<string>("CompletionCheckerBackgroundJobId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ConclusionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ContractIncomeBusinessType")
                        .HasColumnType("integer");

                    b.Property<long>("ContractItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContractItemQuantity")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ContractOverallCost")
                        .HasColumnType("numeric");

                    b.Property<long>("DeliveredAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("IncomeCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncomeShopId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("OutcomeCompanyId")
                        .HasColumnType("bigint");

                    b.Property<short>("TerminationTermInWeeks")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId");

                    b.HasIndex("IncomeShopId");

                    b.HasIndex("OutcomeCompanyId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.ContractInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ContractIncomeBusinessType")
                        .HasColumnType("integer");

                    b.Property<long>("ContractItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContractItemQuantity")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ContractOverallCost")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("IncomeCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncomeShopId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("OutcomeCompanyId")
                        .HasColumnType("bigint");

                    b.Property<short>("TerminationTermInWeeks")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId");

                    b.HasIndex("IncomeCompanyId");

                    b.HasIndex("IncomeShopId");

                    b.HasIndex("OutcomeCompanyId");

                    b.ToTable("ContractInfos");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.ContractRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("ContractInfoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequestedCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequestedShopId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractInfoId");

                    b.HasIndex("RequestedCompanyId");

                    b.HasIndex("RequestedShopId");

                    b.ToTable("ContractRequests");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("BotId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsBot")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsWorkingNow")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemsAmountMadeThisWeek")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ProduceItemJobId")
                        .HasColumnType("text");

                    b.Property<long>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.Property<string>("SalaryPayerJobId")
                        .HasColumnType("text");

                    b.Property<decimal>("SpeedModifier")
                        .HasColumnType("numeric");

                    b.Property<string>("StopWorkingJobId")
                        .HasColumnType("text");

                    b.Property<long?>("WorkerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Shop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("GeneralManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("ShopUnits")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("GeneralManagerId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Truck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<int>("DeliveringSpeedInSeconds")
                        .HasColumnType("integer");

                    b.Property<string>("ReturnTruckJobId")
                        .HasColumnType("text");

                    b.Property<long>("TruckGarageId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrunkStorageId")
                        .HasColumnType("bigint");

                    b.Property<string>("UnloadTruckJobId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TruckGarageId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.TruckGarage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte>("Capacity")
                        .HasColumnType("smallint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("TruckGarages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.CraftingCategory", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("CraftingCategories");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long?>("RecipeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Space")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.HasIndex("CompanyId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("LeadTimeInSeconds")
                        .HasColumnType("integer");

                    b.Property<long>("ResultItemId")
                        .HasColumnType("bigint");

                    b.Property<short>("ResultItemQuantity")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ResultItemId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Essences.Bot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Essences.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("HasJob")
                        .HasColumnType("boolean");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PasswordSaltBase64")
                        .HasColumnType("text");

                    b.Property<decimal>("Units")
                        .HasColumnType("numeric");

                    b.Property<bool>("VkConnected")
                        .HasColumnType("boolean");

                    b.Property<long?>("VkId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.IncomeStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<long?>("OwningCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwningShopId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwningCompanyId")
                        .IsUnique();

                    b.HasIndex("OwningShopId")
                        .IsUnique();

                    b.ToTable("IncomeStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.OutcomeStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<long>("OwningCompanyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwningCompanyId")
                        .IsUnique();

                    b.ToTable("OutcomeStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.PersonalStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("PersonalStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.ShowcaseStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<long>("OwningShopId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwningShopId")
                        .IsUnique();

                    b.ToTable("ShowcaseStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.StorageItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("IncomeStorageId")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OutcomeStorageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PersonalStorageId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long?>("StorageItemWithPriceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TrunkStorageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WorkerStorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IncomeStorageId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OutcomeStorageId");

                    b.HasIndex("PersonalStorageId");

                    b.HasIndex("StorageItemWithPriceId")
                        .IsUnique();

                    b.HasIndex("TrunkStorageId");

                    b.HasIndex("WorkerStorageId");

                    b.ToTable("StorageItems");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.StorageItemWithPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long>("ShowcaseStorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ShowcaseStorageId");

                    b.ToTable("StorageItemsWithPrice");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.TrunkStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<long>("TruckId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TruckId")
                        .IsUnique();

                    b.ToTable("TrunkStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.WorkerStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<long>("OwningCompanyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwningCompanyId")
                        .IsUnique();

                    b.ToTable("WorkerStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.CandidateForJob", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "HiringCompany")
                        .WithMany("Candidates")
                        .HasForeignKey("HiringCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Essences.Player", "PotentialEmployee")
                        .WithMany()
                        .HasForeignKey("PotentialEmployeeId");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Company", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Essences.Player", "GeneralManager")
                        .WithMany("OwnedCompanies")
                        .HasForeignKey("GeneralManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Contract", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Item", "ContractItem")
                        .WithMany()
                        .HasForeignKey("ContractItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "IncomeCompany")
                        .WithMany("IncomeContracts")
                        .HasForeignKey("IncomeShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Shop", "IncomeShop")
                        .WithMany("IncomeContracts")
                        .HasForeignKey("IncomeShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "OutcomeCompany")
                        .WithMany("OutcomeContracts")
                        .HasForeignKey("OutcomeCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.ContractInfo", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Item", "ContractItem")
                        .WithMany()
                        .HasForeignKey("ContractItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "IncomeCompany")
                        .WithMany()
                        .HasForeignKey("IncomeCompanyId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Shop", "IncomeShop")
                        .WithMany()
                        .HasForeignKey("IncomeShopId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "OutcomeCompany")
                        .WithMany()
                        .HasForeignKey("OutcomeCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.ContractRequest", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.ContractInfo", "ContractInfo")
                        .WithMany()
                        .HasForeignKey("ContractInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "RequestedCompany")
                        .WithMany("ContractRequests")
                        .HasForeignKey("RequestedCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Shop", "RequestedShop")
                        .WithMany("ContractRequests")
                        .HasForeignKey("RequestedShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Job", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Shop", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Essences.Player", "GeneralManager")
                        .WithMany("OwnedShops")
                        .HasForeignKey("GeneralManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.Truck", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.TruckGarage", "TruckGarage")
                        .WithMany("Trucks")
                        .HasForeignKey("TruckGarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Business.TruckGarage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "Company")
                        .WithOne("TruckGarage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Business.TruckGarage", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.Ingredient", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.Item", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.CraftingCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryName");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", null)
                        .WithMany("OutputItems")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Crafting.Recipe", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Item", "ResultItem")
                        .WithMany()
                        .HasForeignKey("ResultItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Essences.Bot", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Job", "Job")
                        .WithOne("Bot")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Essences.Bot", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Essences.Player", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Job", "Job")
                        .WithOne("Worker")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Essences.Player", "JobId");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.IncomeStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "OwningCompany")
                        .WithOne("IncomeStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.IncomeStorage", "OwningCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Shop", "OwningShop")
                        .WithOne("IncomeStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.IncomeStorage", "OwningShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.OutcomeStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "OwningCompany")
                        .WithOne("OutcomeStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.OutcomeStorage", "OwningCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.PersonalStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Essences.Player", "Player")
                        .WithOne("PersonalStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.PersonalStorage", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.ShowcaseStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Shop", "OwningShop")
                        .WithOne("ShowcaseStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.ShowcaseStorage", "OwningShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.StorageItem", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.IncomeStorage", null)
                        .WithMany("Items")
                        .HasForeignKey("IncomeStorageId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Crafting.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.OutcomeStorage", null)
                        .WithMany("Items")
                        .HasForeignKey("OutcomeStorageId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.PersonalStorage", null)
                        .WithMany("Items")
                        .HasForeignKey("PersonalStorageId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.StorageItemWithPrice", null)
                        .WithOne("StorageItem")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.StorageItem", "StorageItemWithPriceId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.TrunkStorage", null)
                        .WithMany("Items")
                        .HasForeignKey("TrunkStorageId");

                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.WorkerStorage", null)
                        .WithMany("Items")
                        .HasForeignKey("WorkerStorageId");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.StorageItemWithPrice", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Storages.ShowcaseStorage", "ShowcaseStorage")
                        .WithMany("Items")
                        .HasForeignKey("ShowcaseStorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.TrunkStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Truck", "Truck")
                        .WithOne("TrunkStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.TrunkStorage", "TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Models.Common.Storages.WorkerStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Models.Common.Business.Company", "OwningCompany")
                        .WithOne("WorkerStorage")
                        .HasForeignKey("EnterpriseBot.Api.Models.Common.Storages.WorkerStorage", "OwningCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
