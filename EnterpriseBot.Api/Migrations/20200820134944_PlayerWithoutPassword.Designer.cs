// <auto-generated />
using System;
using EnterpriseBot.Api.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EnterpriseBot.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200820134944_PlayerWithoutPassword")]
    partial class PlayerWithoutPassword
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("ContractsCompleted")
                        .HasColumnType("bigint");

                    b.Property<long?>("DescriptionId")
                        .HasColumnType("bigint");

                    b.Property<int>("Extensions")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReputationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PurseId")
                        .IsUnique();

                    b.HasIndex("ReputationId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompletionCheckerBackgroundJobId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ConclusionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("ContractItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ContractItemQuantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("ContractOverallCost")
                        .HasColumnType("numeric");

                    b.Property<int>("DeliveredAmount")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("IncomeCompanyId")
                        .HasColumnType("bigint");

                    b.Property<int>("Issuer")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("OutcomeCompanyId")
                        .HasColumnType("bigint");

                    b.Property<short>("TerminationTermInDays")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId")
                        .IsUnique();

                    b.HasIndex("IncomeCompanyId");

                    b.HasIndex("OutcomeCompanyId");

                    b.ToTable("CompanyContracts");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyContractRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ContractItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ContractItemQuantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("ContractOverallCost")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("RequestedCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequestingCompanyId")
                        .HasColumnType("bigint");

                    b.Property<int>("RequestingCompanyRelationSide")
                        .HasColumnType("integer");

                    b.Property<short>("TerminationTermInDays")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId")
                        .IsUnique();

                    b.HasIndex("RequestedCompanyId");

                    b.HasIndex("RequestingCompanyId");

                    b.ToTable("CompanyContractRequests");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DescriptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NameId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Permissions")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.Property<long?>("WorkerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DescriptionId")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NameId")
                        .IsUnique();

                    b.HasIndex("WorkerId")
                        .IsUnique();

                    b.ToTable("CompanyJobs");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyJobApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ApplicantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Resume")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("JobId");

                    b.ToTable("CompanyJobApplications");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsWorkingNow")
                        .HasColumnType("boolean");

                    b.Property<string>("ProduceItemJobId")
                        .HasColumnType("text");

                    b.Property<long?>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SpeedMultiplier")
                        .HasColumnType("numeric");

                    b.Property<long?>("WorkingStorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("RecipeId")
                        .IsUnique();

                    b.HasIndex("WorkingStorageId")
                        .IsUnique();

                    b.ToTable("CompanyWorkers");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.ProductionRobot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ProduceItemJobId")
                        .HasColumnType("text");

                    b.Property<long?>("WorkerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("WorkerId")
                        .IsUnique();

                    b.ToTable("ProductionRobots");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.Truck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<long>("DeliveringSpeedInSeconds")
                        .HasColumnType("bigint");

                    b.Property<string>("ReturnTruckJobId")
                        .HasColumnType("text");

                    b.Property<long?>("TruckGarageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TrunkId")
                        .HasColumnType("bigint");

                    b.Property<string>("UnloadTruckJobId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TruckGarageId");

                    b.HasIndex("TrunkId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.TruckGarage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("Capacity")
                        .HasColumnType("smallint");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("TruckGarages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.CraftingCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("DescriptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NameId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId")
                        .IsUnique();

                    b.HasIndex("NameId")
                        .IsUnique();

                    b.ToTable("CraftingCategories");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.CraftingSubCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("DescriptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MainCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NameId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId")
                        .IsUnique();

                    b.HasIndex("MainCategoryId");

                    b.HasIndex("NameId")
                        .IsUnique();

                    b.ToTable("CraftingSubCategories");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long?>("RecipeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NameId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Space")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("NameId")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CanBeDoneBy")
                        .HasColumnType("integer");

                    b.Property<int>("LeadTimeInSeconds")
                        .HasColumnType("integer");

                    b.Property<long?>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<int>("ResultItemQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId")
                        .IsUnique();

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Donation.Donation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Privilege")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Donation.DonationPurchase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long?>("RelatedDonationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RelatedDonationId");

                    b.ToTable("DonationPurchases");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Essences.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("AboutId")
                        .HasColumnType("bigint");

                    b.Property<bool>("CanChangeNameAfterRegistrationViaSocialNetwork")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PasswordSaltBase64")
                        .HasColumnType("text");

                    b.Property<long?>("PurseId")
                        .HasColumnType("bigint");

                    b.Property<bool>("RegisteredWithSocialNetworkCredentials")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("ReputationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<bool>("VkConnected")
                        .HasColumnType("boolean");

                    b.Property<long?>("VkId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AboutId")
                        .IsUnique();

                    b.HasIndex("PurseId")
                        .IsUnique();

                    b.HasIndex("ReputationId")
                        .IsUnique();

                    b.HasIndex("StatusId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Localization.LocalizedString", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("LocalizedStrings");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Localization.StringLocalization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<long?>("LocalizedStringId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedStringId");

                    b.ToTable("StringLocalizations");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Money.Purse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("Purses");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Reputation.Reputation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("Reputations");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Reputation.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CompanyReviewerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlayerReviewerId")
                        .HasColumnType("bigint");

                    b.Property<short>("Rating")
                        .HasColumnType("smallint");

                    b.Property<long?>("ReputationId")
                        .HasColumnType("bigint");

                    b.Property<int>("Reviewer")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyReviewerId");

                    b.HasIndex("PlayerReviewerId");

                    b.HasIndex("ReputationId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.CompanyStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("OwningCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("StorageId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwningCompanyId");

                    b.HasIndex("StorageId")
                        .IsUnique();

                    b.ToTable("CompanyStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.InventoryStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("OwningPlayerId")
                        .HasColumnType("bigint");

                    b.Property<long>("StorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwningPlayerId")
                        .IsUnique();

                    b.HasIndex("StorageId")
                        .IsUnique();

                    b.ToTable("InventoryStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.ItemPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwningShowcaseId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("OwningShowcaseId");

                    b.ToTable("ItemPrices");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.ShowcaseStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwningCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("StorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OwningCompanyId")
                        .IsUnique();

                    b.HasIndex("StorageId")
                        .IsUnique();

                    b.ToTable("ShowcaseStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.Storage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Capacity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.StorageItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long?>("StorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("StorageId");

                    b.ToTable("StorageItems");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.TrunkStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("OwningTruckId")
                        .HasColumnType("bigint");

                    b.Property<long>("StorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwningTruckId")
                        .IsUnique();

                    b.HasIndex("StorageId")
                        .IsUnique();

                    b.ToTable("TrunkStorages");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.Company", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");

                    b.HasOne("EnterpriseBot.Api.Game.Essences.Player", "Owner")
                        .WithMany("OwnedCompanies")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Money.Purse", "Purse")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.Company", "PurseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Reputation.Reputation", "Reputation")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.Company", "ReputationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyContract", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Item", "ContractItem")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyContract", "ContractItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "IncomeCompany")
                        .WithMany("IncomeContracts")
                        .HasForeignKey("IncomeCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "OutcomeCompany")
                        .WithMany("OutcomeContracts")
                        .HasForeignKey("OutcomeCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyContractRequest", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Item", "ContractItem")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyContractRequest", "ContractItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "RequestedCompany")
                        .WithMany("InboxContractRequests")
                        .HasForeignKey("RequestedCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "RequestingCompany")
                        .WithMany("SentContractRequests")
                        .HasForeignKey("RequestingCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyJob", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Description")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyJob", "DescriptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Essences.Player", "Employee")
                        .WithMany("CompanyJobs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Name")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyJob", "NameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", "Worker")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyJob", "WorkerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyJobApplication", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Essences.Player", "Applicant")
                        .WithMany("CompanyJobApplications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.CompanyJob", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "Company")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Recipe", "Recipe")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", "RecipeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.CompanyStorage", "WorkingStorage")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", "WorkingStorageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.ProductionRobot", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "Company")
                        .WithMany("Robots")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.CompanyWorker", "Worker")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.ProductionRobot", "WorkerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.Truck", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.TruckGarage", "TruckGarage")
                        .WithMany("Trucks")
                        .HasForeignKey("TruckGarageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.TrunkStorage", "Trunk")
                        .WithMany()
                        .HasForeignKey("TrunkId");
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Business.Company.TruckGarage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "Company")
                        .WithOne("TruckGarage")
                        .HasForeignKey("EnterpriseBot.Api.Game.Business.Company.TruckGarage", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.CraftingCategory", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Description")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.CraftingCategory", "DescriptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Name")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.CraftingCategory", "NameId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.CraftingSubCategory", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Description")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.CraftingSubCategory", "DescriptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Crafting.CraftingCategory", "MainCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("MainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Name")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.CraftingSubCategory", "NameId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.Ingredient", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Item", "Item")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.Ingredient", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.Item", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.CraftingSubCategory", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Name")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.Item", "NameId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Crafting.Recipe", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Item", "ResultItem")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Crafting.Recipe", "RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Donation.Donation", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Essences.Player", "Player")
                        .WithOne("Donation")
                        .HasForeignKey("EnterpriseBot.Api.Game.Donation.Donation", "PlayerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Donation.DonationPurchase", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Donation.Donation", "RelatedDonation")
                        .WithMany("History")
                        .HasForeignKey("RelatedDonationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Essences.Player", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "About")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Essences.Player", "AboutId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EnterpriseBot.Api.Game.Money.Purse", "Purse")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Essences.Player", "PurseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Reputation.Reputation", "Reputation")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Essences.Player", "ReputationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", "Status")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Essences.Player", "StatusId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Localization.StringLocalization", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Localization.LocalizedString", null)
                        .WithMany("Localizations")
                        .HasForeignKey("LocalizedStringId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Money.Purse", b =>
                {
                    b.OwnsMany("EnterpriseBot.Api.Game.Money.Money", "Money", b1 =>
                        {
                            b1.Property<long>("PurseId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.HasKey("PurseId", "Id");

                            b1.ToTable("Money");

                            b1.WithOwner()
                                .HasForeignKey("PurseId");
                        });
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Reputation.Review", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "CompanyReviewer")
                        .WithMany()
                        .HasForeignKey("CompanyReviewerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Essences.Player", "PlayerReviewer")
                        .WithMany()
                        .HasForeignKey("PlayerReviewerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Reputation.Reputation", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ReputationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.CompanyStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "OwningCompany")
                        .WithMany("Storages")
                        .HasForeignKey("OwningCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.Storage", "Storage")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.CompanyStorage", "StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.InventoryStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Essences.Player", "OwningPlayer")
                        .WithOne("Inventory")
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.InventoryStorage", "OwningPlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.Storage", "Storage")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.InventoryStorage", "StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.ItemPrice", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Item", "Item")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.ItemPrice", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.ShowcaseStorage", "OwningShowcase")
                        .WithMany("Prices")
                        .HasForeignKey("OwningShowcaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.ShowcaseStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", null)
                        .WithMany("Showcases")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Company", "OwningCompany")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.ShowcaseStorage", "OwningCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.Storage", "Storage")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.ShowcaseStorage", "StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.StorageItem", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Crafting.Item", "Item")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.StorageItem", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.Storage", null)
                        .WithMany("Items")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnterpriseBot.Api.Game.Storages.TrunkStorage", b =>
                {
                    b.HasOne("EnterpriseBot.Api.Game.Business.Company.Truck", "OwningTruck")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.TrunkStorage", "OwningTruckId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnterpriseBot.Api.Game.Storages.Storage", "Storage")
                        .WithOne()
                        .HasForeignKey("EnterpriseBot.Api.Game.Storages.TrunkStorage", "StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
